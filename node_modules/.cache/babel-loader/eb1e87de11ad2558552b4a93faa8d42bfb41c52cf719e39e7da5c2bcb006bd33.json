{"ast":null,"code":"var _jsxFileName = \"/Users/sujan/Documents/Canada/CanIT/Project/H2O/contactslist/src/components/contactlist/contactlist.tsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Mode } from '../../models/component.model';\nimport './contactlist.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactList({\n  contacts,\n  onContactSelection,\n  onDeleteContact,\n  selectedId,\n  mode\n}) {\n  const categorizeContacts = contacts => {\n    let results = {};\n    contacts.forEach(val => {\n      let key = val.lastName.split('')[0].toUpperCase();\n      results[key] = results[key] || {\n        key,\n        data: []\n      };\n      results[key].data = [...results[key].data, val];\n    });\n    let finalResult = Object.values(results);\n    finalResult = finalResult.sort((val1, val2) => val1.key < val2.key ? -1 : 1);\n    finalResult = finalResult.map(val => {\n      val.data = val.data.sort((val1, val2) => val1.lastName < val2.lastName ? -1 : 1);\n      return val;\n    });\n    return finalResult;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts-list\",\n    children: categorizeContacts(contacts).map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: user.data.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: val.id === selectedId ? 'selected' : '',\n              onClick: () => onContactSelection(val.id),\n              children: [val.firstName + ' ' + val.lastName, val.id === selectedId && mode == Mode.edit && /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => onDeleteContact(val.id),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 234\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, user.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n_c = ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onContactSelection: PropTypes.func,\n  onDeleteContact: PropTypes.func,\n  selectedId: PropTypes.number,\n  mode: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","PropTypes","Mode","jsxDEV","_jsxDEV","ContactList","contacts","onContactSelection","onDeleteContact","selectedId","mode","categorizeContacts","results","forEach","val","key","lastName","split","toUpperCase","data","finalResult","Object","values","sort","val1","val2","map","className","children","user","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","firstName","edit","_c","propTypes","array","func","number","string","$RefreshReg$"],"sources":["/Users/sujan/Documents/Canada/CanIT/Project/H2O/contactslist/src/components/contactlist/contactlist.tsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Contact, Mode } from '../../models/component.model';\r\nimport './contactlist.scss';\r\n\r\nexport default function ContactList({ contacts, onContactSelection, onDeleteContact, selectedId, mode }: { contacts: Contact[], onContactSelection: any, onDeleteContact: any, selectedId: number, mode: string }) {\r\n   \r\n    const categorizeContacts = (contacts: Contact[]): { key: string, data: Contact[] }[]  => {\r\n        let results: { [keyName: string]: { key: string, data: Contact[] }} = {};\r\n        contacts.forEach(val => {\r\n            let key = val.lastName.split('')[0].toUpperCase();\r\n            results[key] = results[key] || { key, data: []};\r\n            results[key].data = [ ...results[key].data, val ];\r\n            \r\n        });\r\n        let finalResult = Object.values(results);\r\n        finalResult = finalResult.sort((val1, val2) => val1.key < val2.key? -1: 1);\r\n        finalResult = finalResult.map(val => {\r\n            val.data = val.data.sort((val1, val2) => val1.lastName < val2.lastName ? -1: 1);\r\n            return val;\r\n        });\r\n        return finalResult;\r\n    };\r\n    return <div className='contacts-list'>\r\n        {\r\n           categorizeContacts(contacts).map((user: { key: string, data: Contact[] }) => {\r\n            return <div key={user.key} className=\"list-item\">\r\n                <p>{user.key}</p>\r\n                <ul>\r\n                    {\r\n                        user.data.map((val: Contact) => {\r\n                            return <li key={val.id} className={ val.id === selectedId? 'selected': ''} onClick={() => onContactSelection(val.id)}>{ val.firstName + ' ' + val.lastName}{ (val.id === selectedId && mode == Mode.edit) && <span onClick={ () => onDeleteContact(val.id)}>-</span>}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n           }) \r\n        }\r\n    </div>;\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onContactSelection: PropTypes.func,\r\n    onDeleteContact: PropTypes.func,\r\n    selectedId: PropTypes.number,\r\n    mode: PropTypes.string\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAkBC,IAAI,QAAQ,8BAA8B;AAC5D,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC,kBAAkB;EAAEC,eAAe;EAAEC,UAAU;EAAEC;AAA+G,CAAC,EAAE;EAE/M,MAAMC,kBAAkB,GAAIL,QAAmB,IAA0C;IACrF,IAAIM,OAA+D,GAAG,CAAC,CAAC;IACxEN,QAAQ,CAACO,OAAO,CAACC,GAAG,IAAI;MACpB,IAAIC,GAAG,GAAGD,GAAG,CAACE,QAAQ,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjDN,OAAO,CAACG,GAAG,CAAC,GAAGH,OAAO,CAACG,GAAG,CAAC,IAAI;QAAEA,GAAG;QAAEI,IAAI,EAAE;MAAE,CAAC;MAC/CP,OAAO,CAACG,GAAG,CAAC,CAACI,IAAI,GAAG,CAAE,GAAGP,OAAO,CAACG,GAAG,CAAC,CAACI,IAAI,EAAEL,GAAG,CAAE;IAErD,CAAC,CAAC;IACF,IAAIM,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACV,OAAO,CAAC;IACxCQ,WAAW,GAAGA,WAAW,CAACG,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACT,GAAG,GAAGU,IAAI,CAACV,GAAG,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC;IAC1EK,WAAW,GAAGA,WAAW,CAACM,GAAG,CAACZ,GAAG,IAAI;MACjCA,GAAG,CAACK,IAAI,GAAGL,GAAG,CAACK,IAAI,CAACI,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACR,QAAQ,GAAGS,IAAI,CAACT,QAAQ,GAAG,CAAC,CAAC,GAAE,CAAC,CAAC;MAC/E,OAAOF,GAAG;IACd,CAAC,CAAC;IACF,OAAOM,WAAW;EACtB,CAAC;EACD,oBAAOhB,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAE9BjB,kBAAkB,CAACL,QAAQ,CAAC,CAACoB,GAAG,CAAEG,IAAsC,IAAK;MAC5E,oBAAOzB,OAAA;QAAoBuB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC5CxB,OAAA;UAAAwB,QAAA,EAAIC,IAAI,CAACd;QAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB7B,OAAA;UAAAwB,QAAA,EAEQC,IAAI,CAACV,IAAI,CAACO,GAAG,CAAEZ,GAAY,IAAK;YAC5B,oBAAOV,OAAA;cAAiBuB,SAAS,EAAGb,GAAG,CAACoB,EAAE,KAAKzB,UAAU,GAAE,UAAU,GAAE,EAAG;cAAC0B,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAACO,GAAG,CAACoB,EAAE,CAAE;cAAAN,QAAA,GAAGd,GAAG,CAACsB,SAAS,GAAG,GAAG,GAAGtB,GAAG,CAACE,QAAQ,EAAIF,GAAG,CAACoB,EAAE,KAAKzB,UAAU,IAAIC,IAAI,IAAIR,IAAI,CAACmC,IAAI,iBAAKjC,OAAA;gBAAM+B,OAAO,EAAGA,CAAA,KAAM3B,eAAe,CAACM,GAAG,CAACoB,EAAE,CAAE;gBAAAN,QAAA,EAAC;cAAC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAApPnB,GAAG,CAACoB,EAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmP,CAAC;UAC9Q,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC;MAAA,GARQJ,IAAI,CAACd,GAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASpB,CAAC;IACP,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AACV;AAACK,EAAA,GAlCuBjC,WAAW;AAoCnCA,WAAW,CAACkC,SAAS,GAAG;EACpBjC,QAAQ,EAAEL,SAAS,CAACuC,KAAK;EACzBjC,kBAAkB,EAAEN,SAAS,CAACwC,IAAI;EAClCjC,eAAe,EAAEP,SAAS,CAACwC,IAAI;EAC/BhC,UAAU,EAAER,SAAS,CAACyC,MAAM;EAC5BhC,IAAI,EAAET,SAAS,CAAC0C;AACpB,CAAC;AAAA,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}