{"ast":null,"code":"var _jsxFileName = \"/Users/sujan/Documents/Canada/CanIT/Project/H2O/contactslist/src/components/contactsboard/contactsboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ContactList from '../contactlist/contactlist';\nimport { Mode } from '../../models/component.model';\nimport './contactsboard.scss';\nimport ContactInfo from '../contactinfo/contactinfo';\nimport EditContact from '../editcontact/editcontact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactsBoard(props) {\n  _s();\n  const [contacts, setContacts] = useState([{\n    'firstName': 'Adam',\n    'lastName': 'Alice',\n    'phoneNumber': '399-692-7753',\n    'email': 'adam.alice@gmail.com',\n    'address': 'Check',\n    'note': 'California address',\n    'id': 1\n  }, {\n    'firstName': 'Adam',\n    'lastName': 'Bob',\n    'phoneNumber': '399-692-7753',\n    'email': 'adam.alice@gmail.com',\n    'address': 'Check',\n    'note': 'California address',\n    'id': 2\n  }]);\n  const [mode, setMode] = useState('view');\n  const [selectedContact, setSelectedContact] = useState(1);\n  const [nextId, setNextId] = useState(3);\n  const onContactSelection = contactId => {\n    setSelectedContact(contactId);\n    setMode(Mode.view);\n  };\n  const onCreateAction = () => {\n    setMode(Mode.new);\n  };\n  const onEditAction = () => {\n    setMode(Mode.edit);\n  };\n  const deleteContact = id => {\n    let updatedContacts = contacts.filter(val => val.id !== id);\n    setContacts(updatedContacts);\n    setMode(Mode.view);\n    if (updatedContacts.length > 0) {\n      setSelectedContact(updatedContacts[0].id);\n    }\n  };\n  const createNewContact = contact => {\n    contact.firstName = contact.firstName.charAt(0).toUpperCase() + contact.firstName.slice(1);\n    contact.lastName = contact.lastName.charAt(0).toUpperCase() + contact.lastName.slice(1);\n    setContacts([...contacts, contact]);\n    setNextId(nextId + 1);\n    setSelectedContact(contact.id);\n    setMode(Mode.view);\n  };\n  const editContact = contact => {\n    let updatedContacts = [...contacts];\n    let contactToBeEdited = updatedContacts.find(val => val.id === contact.id);\n    if (contactToBeEdited) {\n      Object.assign(contactToBeEdited, {\n        firstName: contact.firstName,\n        lastName: contact.lastName,\n        phoneNumber: contact.phoneNumber,\n        email: contact.email,\n        address: contact.address,\n        note: contact.note\n      });\n    }\n    setContacts(updatedContacts);\n    setSelectedContact(contact.id);\n    setMode(Mode.view);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts-board\",\n    children: [/*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts,\n      onContactSelection: onContactSelection,\n      onDeleteContact: deleteContact,\n      selectedId: selectedContact,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), mode === Mode.view && /*#__PURE__*/_jsxDEV(ContactInfo, {\n      contact: contacts.find(val => val.id === selectedContact),\n      selectedContact: selectedContact,\n      onCreate: onCreateAction,\n      onEdit: onEditAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 34\n    }, this), mode === Mode.edit && /*#__PURE__*/_jsxDEV(EditContact, {\n      contact: contacts.find(val => val.id === selectedContact),\n      onDone: editContact,\n      onCreate: onCreateAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 34\n    }, this), mode === Mode.new && /*#__PURE__*/_jsxDEV(EditContact, {\n      contact: {\n        id: nextId,\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        address: '',\n        note: ''\n      },\n      onDone: createNewContact,\n      onCreate: onCreateAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n}\n_s(ContactsBoard, \"pOy1bfky4pw/axdHGsjAoONsNAI=\");\n_c = ContactsBoard;\nvar _c;\n$RefreshReg$(_c, \"ContactsBoard\");","map":{"version":3,"names":["React","useState","ContactList","Mode","ContactInfo","EditContact","jsxDEV","_jsxDEV","ContactsBoard","props","_s","contacts","setContacts","mode","setMode","selectedContact","setSelectedContact","nextId","setNextId","onContactSelection","contactId","view","onCreateAction","new","onEditAction","edit","deleteContact","id","updatedContacts","filter","val","length","createNewContact","contact","firstName","charAt","toUpperCase","slice","lastName","editContact","contactToBeEdited","find","Object","assign","phoneNumber","email","address","note","className","children","onDeleteContact","selectedId","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","onEdit","onDone","_c","$RefreshReg$"],"sources":["/Users/sujan/Documents/Canada/CanIT/Project/H2O/contactslist/src/components/contactsboard/contactsboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ContactList from '../contactlist/contactlist';\r\nimport { Contact, Mode } from '../../models/component.model';\r\nimport './contactsboard.scss';\r\nimport ContactInfo from '../contactinfo/contactinfo';\r\nimport EditContact from '../editcontact/editcontact';\r\n\r\nexport default function ContactsBoard(props: any) {\r\n    const [contacts, setContacts] = useState([{\r\n        'firstName': 'Adam',\r\n        'lastName': 'Alice',\r\n        'phoneNumber': '399-692-7753',\r\n        'email': 'adam.alice@gmail.com',\r\n        'address': 'Check',\r\n        'note': 'California address',\r\n        'id': 1\r\n    }, {\r\n        'firstName': 'Adam',\r\n        'lastName': 'Bob',\r\n        'phoneNumber': '399-692-7753',\r\n        'email': 'adam.alice@gmail.com',\r\n        'address': 'Check',\r\n        'note': 'California address',\r\n        'id': 2\r\n    }]);\r\n    \r\n    const [mode, setMode] = useState('view');\r\n    const [selectedContact, setSelectedContact] = useState(1);\r\n    const [nextId, setNextId] = useState(3);\r\n    const onContactSelection = (contactId: number) => {\r\n        setSelectedContact(contactId);\r\n        setMode(Mode.view);\r\n    };\r\n    const onCreateAction = () => {\r\n        setMode(Mode.new);\r\n    };\r\n    const onEditAction = () => {\r\n        setMode(Mode.edit);\r\n    };\r\n    const deleteContact = (id: number) => {\r\n        let updatedContacts = contacts.filter(val => val.id !== id);\r\n        setContacts(updatedContacts);\r\n        setMode(Mode.view);\r\n        if ( updatedContacts.length > 0 ) {\r\n            setSelectedContact(updatedContacts[0].id);\r\n        }        \r\n    }\r\n    const createNewContact = (contact: Contact) => {\r\n        contact.firstName = contact.firstName.charAt(0).toUpperCase() + contact.firstName.slice(1);\r\n        contact.lastName = contact.lastName.charAt(0).toUpperCase() + contact.lastName.slice(1);\r\n        setContacts([...contacts, contact ]);\r\n        setNextId(nextId + 1);\r\n        setSelectedContact(contact.id);\r\n        setMode(Mode.view);\r\n    };\r\n    const editContact = (contact: Contact) => {\r\n        let updatedContacts = [...contacts];\r\n        let contactToBeEdited = updatedContacts.find(val => val.id === contact.id);\r\n        if ( contactToBeEdited ) {\r\n            Object.assign( contactToBeEdited, { firstName: contact.firstName,\r\n                lastName: contact.lastName,\r\n                phoneNumber: contact.phoneNumber,\r\n                email: contact.email,\r\n                address: contact.address,\r\n                note: contact.note  \r\n            });\r\n        }\r\n        setContacts(updatedContacts);\r\n        setSelectedContact(contact.id);\r\n        setMode(Mode.view);\r\n    };\r\n    return <div className='contacts-board'>\r\n        <ContactList contacts={contacts} onContactSelection={onContactSelection} onDeleteContact={deleteContact} selectedId={selectedContact} mode={mode}></ContactList>\r\n        { mode  === Mode.view && <ContactInfo contact={contacts.find(val => val.id === selectedContact )} selectedContact={selectedContact} onCreate={onCreateAction} onEdit={onEditAction}></ContactInfo> }\r\n        { mode  === Mode.edit && <EditContact contact={contacts.find(val => val.id === selectedContact )} onDone={ editContact } onCreate={onCreateAction}></EditContact> }\r\n        { mode  === Mode.new && <EditContact contact={{ id: nextId, firstName: '', lastName: '', phoneNumber: '', email: '', address: '', note: ''}} onDone={ createNewContact } onCreate={onCreateAction}></EditContact> }\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}